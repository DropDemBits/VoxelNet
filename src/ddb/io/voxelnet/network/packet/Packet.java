package ddb.io.voxelnet.network.packet;

import io.netty.buffer.ByteBuf;

/**
 * A Packet that can be sent over the network
 */
public interface Packet
{
	/**
	 * Creates a new, empty packet.
	 * Not called anywhere, but is used to guarantee that an empty constructor
	 * is present
	 */
	@SuppressWarnings("unused")
	Packet makeEmptyPacket();
	
	/**
	 * Decodes the packet payload from the given buffer
	 * @param data The payload data
	 * @throws Exception Generated by ByteBuf when there is not enough space
	 */
	void decodePayload(ByteBuf data) throws Exception;
	
	/**
	 * Decodes the packet payload from the given buffer
	 * @param data The payload data
	 * @throws Exception Generated by ByteBuf when there is not enough space
	 */
	void encodePayload(ByteBuf data) throws Exception;
	
	/**
	 * Gets the ID of the packet
	 * @return The ID of the packet
	 */
	int getPacketID();
}
